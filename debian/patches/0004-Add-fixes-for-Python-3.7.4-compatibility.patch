From: Abhilash Raj <raj.abhilash1@gmail.com>
Date: Sat, 31 Aug 2019 15:38:48 -0700
Subject: Add fixes for Python 3.7.4 compatibility.

---
 src/mailman/commands/cli_import.py   | 13 +++++++++----
 src/mailman/rest/tests/test_basic.py |  7 +++++--
 2 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/src/mailman/commands/cli_import.py b/src/mailman/commands/cli_import.py
index 41ae0b8..7e4a812 100644
--- a/src/mailman/commands/cli_import.py
+++ b/src/mailman/commands/cli_import.py
@@ -34,9 +34,13 @@ from zope.component import getUtility
 from zope.interface import implementer
 
 
-# A fake Bouncer class from Mailman 2.1, we don't use it but there are
-# instances in the .pck files.
-class Bouncer:
+# A fake module to go with `Bouncer`.
+class _Mailman:
+    __path__ = 'src/mailman/commands/cli_import.py'
+
+# A fake Mailman object with Bouncer class from Mailman 2.1, we don't use it
+# but there are instances in the .pck files.
+class _Bouncer:
     class _BounceInfo:
         pass
 
@@ -56,7 +60,8 @@ def import21(ctx, listspec, pickle_file):
     if mlist is None:
         ctx.fail(_('No such list: $listspec'))
     with ExitStack() as resources:
-        resources.enter_context(hacked_sys_modules('Mailman.Bouncer', Bouncer))
+        resources.enter_context(hacked_sys_modules('Mailman', _Mailman))
+        resources.enter_context(hacked_sys_modules('Mailman.Bouncer', _Bouncer))
         resources.enter_context(transaction())
         while True:
             try:
diff --git a/src/mailman/rest/tests/test_basic.py b/src/mailman/rest/tests/test_basic.py
index 7cf8fad..3f8bc6d 100644
--- a/src/mailman/rest/tests/test_basic.py
+++ b/src/mailman/rest/tests/test_basic.py
@@ -22,6 +22,7 @@ For example, test the integration between Mailman and Falcon.
 
 import unittest
 
+from http.client import InvalidURL
 from mailman.app.lifecycle import create_list
 from mailman.database.transaction import transaction
 from mailman.testing.helpers import call_api
@@ -53,6 +54,8 @@ class TestBasicREST(unittest.TestCase):
         # space in the URL breaks error reporting due to default HTTP/0.9.
         # Use urllib.request since requests will encode the URL, defeating the
         # purpose of this test (i.e. we want the literal space, not %20).
-        with self.assertRaises(HTTPError) as cm:
+        with self.assertRaises((HTTPError, InvalidURL)) as cm:
             urlopen('http://localhost:9001/3.0/lists/test @example.com')
-        self.assertEqual(cm.exception.code, 400)
+
+        if isinstance(cm, HTTPError):
+            self.assertEqual(cm.exception.code, 400)
